apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: application
  labels:
    strimzi.io/cluster: application
spec:
  kafka:
    replicas: 3
    version: 3.6.0
    resources:
      requests:
        cpu: 1000m
        memory: 3Gi
    jvmOptions:
      "-Xms": 1G
      "-Xmx": 3G
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: "INFO"
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: nodeport
        tls: true
        authentication:
          type: tls
        configuration:
          brokers:
            - broker: 0
            - broker: 1
            - broker: 2
    authorization:
      type: simple
    config:
      auto.create.topics.enable: "false"
      group.max.session.timeout.ms: 1800000
      message.max.bytes: 6291456
      offsets.retention.minutes: 129600
      heartbeat.interval.ms: 3000
      group.min.session.timeout.ms: 6000
      request.timeout.ms: 1200000
      session.timeout.ms: 900000
      log.retention.hours: 8760
      num.partitions: 10
      max.poll.interval.ms: 1500000
      max.poll.records: 100
      default.replication.factor: 1
      max.incremental.fetch.session.cache.slots: 10000
      min.insync.replicas: 1
      log.message.format.version: "3.3"
      inter.broker.protocol.version: "3.3"
      offsets.topic.replication.factor: 1
      unclean.leader.election.enable: "false"
    storage:
      type: persistent-claim
      size: 10Gi
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yaml
    template:
      pod:
        tolerations:
          - key: "kafka"
            operator: "Exists"
            effect: "NoSchedule"
  zookeeper:
    replicas: 1
    logging:
      type: inline
      loggers:
        zookeeper.root.logger: "ERROR"
    storage:
      type: persistent-claim
      size: 10Gi
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yaml
    template:
      pod:
        tolerations:
          - key: "kafka"
            operator: "Exists"
            effect: "NoSchedule"
  entityOperator:
    topicOperator:
      resources:
        requests:
          cpu: 1000m
          memory: 768Mi
    userOperator: { }